#ServerProperties
server.port=8088
#项目名
server.servlet.context-path=

#ThymeleafProperties
spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=自定义的Thymeleaf的模板位置，jar内部以classpath:开头，外部路径使用file:开头
#spring.thymeleaf.suffix=自动匹配后缀
#spring.thymeleaf.cache=是否使用缓存
#知道了以上配置的作用，我们就知道了，默认情况下Thymeleaf的spring.thymeleaf.prefix这条配置的值是classpath:/templates/
#（Spring Boot中classpath的根目录即对应项目文件夹/src/main/resources）



# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
#&allowPublicKeyRetrieval=true
# bug产生原因分析：服务器段的用户登陆缓存过期失效，则需要重新进行用户验证，此时就会因为客户端无法获得公钥而导致连接失败。
# 解决方法就是设置上一行配置为true，不过有安全风险，容易遭受MITM中间人攻击，或者使用GUI进行一次数据库链接，使得登陆缓存存在即可。

# 如果用户帐户使用sha256_password身份验证，则在传输过程中必须保护密码；TLS是首选的机制，但如果它不可用，则将使用RSA公钥加密。
# 要指定服务器的RSA公钥，请使用ServerRSAPublicKeyFile连接字符串设置，或将AllowPublicKeyRetrieval=True设置为允许客户端自动向服务器请求公钥。
# 请注意，AllowPublicKeyRetrieval=True可能允许恶意代理执行MITM攻击以获取明文密码，因此默认情况下它为False，必须显式启用。

spring.datasource.username=root
spring.datasource.password=liuzhifu
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.zhifu.community.entity
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.map-underscore-to-camel-case=true

#logger
logging.level.com.zhifu.community=debug
logging.file.name=D:/ProgramData/MyProject/data/nowcoder/community.log

#MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=2898118638@qq.com
spring.mail.password=clbxfwxhorkddgdh
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

#community,域名
community.path.domin=http://localhost:8088
community.path.upload=d:/ProgramData/MyProject/data/upload

#Redis-Properties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

#kafka-Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

#ElasticsearchProperties
#spring.data.elasticsearch.cluster-name=zhifu-cluster
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
#ES和Redis的底层均为Netty实现，因此，当项目整合两者同时运行时，会发生冲突，需要对ES的底层代码做一些调整解决该问题
elasticSearch.url=127.0.0.1:9200

# TaskExecutionProperties,Spring线程池配置
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties,Spring定时任务线程池配置
spring.task.scheduling.pool.size=5

#QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

#wk
wk.pdf.command=d:/Program Files/wkhtmltopdf/bin/wkhtmltopdf
wk.pdf.storage=d:/ProgramData/MyProject/data/wk-pdfs
wk.image.command=d:/Program Files/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=d:/ProgramData/MyProject/data/wk-images

#qiniu
qiniu.key.access=RVMG6d2LbSJJM6sOVbG_pGP0jwVf77vjnyBzHq-q
qiniu.key.secret=kY6W0eGEYzrmAPQld_tcS6RtNzrzoY-6Z6oW7o3Y
qiniu.bucket.header.name=community-liuzhifu-header
qiniu.bucket.header.url=http://rxu9vbgwd.hb-bkt.clouddn.com
qiniu.bucket.share.name=community-liuzhifu-share
qiniu.bucket.share.url=http://rxu9chtd2.hb-bkt.clouddn.com

#caffeine
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180

#Actuator
#Actuator默认启用20+个端点，禁用一个端点（post请求，可以关闭服务器应用）
#同时默认只暴露出两个端点:health、啥玩意？，想暴露其他端点，需要另行配置
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=caches